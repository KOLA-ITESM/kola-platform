openapi: "3.0.0"
info:
  version: 1.0.0
  title: KOLA Dashboard API
  license:
    name: MIT
  description: |
    This is the API for the KOLA Dashboard. Used to manage sensors and data.
servers:
  - url: http://localhost:3000/api
paths:
  /sensor:
    get:
      summary: Get one or all sensors
      description: Depending on the query parameters, either one or all sensors are returned.
      tags:
        - Sensor
      operationId: getSensor
      parameters:
        - $ref: '#/components/parameters/all'
        - $ref: '#/components/parameters/id'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Sensor'
        '400':
          description: Bad Request
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
                    description: Error message
    post:
      summary: Create new sensor(s)
      description: Create new sensor(s) with given data.
      tags:
        - Sensor
      operationId: postSensor
      parameters:
        - $ref: '#/components/parameters/csv'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
                    description: Success message
                  newSensors:
                    type: array
                    items:
                      $ref: '#/components/schemas/Sensor'
        '400':
          description: Bad Request
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
                    description: Error message
    delete:
      summary: Delete sensor(s)
      description: Delete sensor(s) with given id(s).
      tags:
        - Sensor
      operationId: deleteSensor
      parameters:
        - $ref: '#/components/parameters/all'
        - $ref: '#/components/parameters/id'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
                    description: Success message
        '400':
          description: Bad Request
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
                    description: Error message
  /readings:
    get:
      summary: Get one or all readings
      description: Depending on the query parameters, either one or all readings are returned.
      tags:
        - Readings
      operationId: getReading
      parameters:
        - $ref: '#/components/parameters/all'
        - $ref: '#/components/parameters/id'
        - $ref: '#/components/parameters/sensorId'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Reading'
        '400':
          description: Bad Request
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
                    description: Error message
    post:
      summary: Create new reading(s)
      description: Create new reading(s) with given data.
      tags:
        - Readings
      operationId: postReading
      parameters:
        - $ref: '#/components/parameters/sensorId'
        - $ref: '#/components/parameters/csv'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
                    description: Success message
                  newReadings:
                    type: array
                    items:
                      $ref: '#/components/schemas/Reading'
        '400':
          description: Bad Request
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
                    description: Error message
    delete:
      summary: Delete reading(s)
      description: Delete reading(s) with given id(s) and sensorId.
      tags:
        - Readings
      operationId: deleteReading
      parameters:
        - $ref: '#/components/parameters/all'
        - $ref: '#/components/parameters/id'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
                    description: Success message
        '400':
          description: Bad Request
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
                    description: Error message
components:
  parameters:
    all:
      name: all
      in: query
      schema:
        type: boolean
      description: Apply corresponding action to all objects
    id:
      name: id
      in: query
      description: Apply corresponding action to object with given id
      schema:
        type: string
    sensorId:
      name: sensorId
      in: query
      description: Apply corresponding action to readings with given sensorId
      schema:
        type: string
    csv:
      name: csv
      in: query
      description: Use CSV as input format
      schema:
        type: boolean
  schemas:
    Sensor:
      type: object
      properties:
        id:
          type: integer
          description: Unique identifier of the sensor
        location:
          type: string
          description: Location of the sensor
        longitude:
          type: string
          description: Longitude of the sensor
        latitude:
          type: string
          description: Latitude of the sensor
        status:
          type: string
          description: Status of the sensor
    Reading:
      type: object
      properties:
        id:
          type: integer
          description: Unique identifier of the reading
        sensorId:
          type: string
          description: Unique identifier of the sensor corresponding of the reading
        readingValues:
          type: string
          description: Reading value of the sensor
        readingTime: 
          type: string
          format: date-time
          description: Time when reading was made
        readingId:
          type: string
          description: Original id of the reading relative to the sensor